# S·ª≠ d·ª•ng Alpine ch·ªâ v·ªõi Node.js
FROM node:alpine

# T·∫°o th∆∞ m·ª•c l√†m vi·ªác
WORKDIR /negan

# C√†i ƒë·∫∑t curl, bash, v√† c√°c c√¥ng c·ª• c·∫ßn thi·∫øt
RUN apk --no-cache add curl bash procps

# C√†i ƒë·∫∑t c√°c module c·∫ßn thi·∫øt b·∫±ng npm
RUN npm install --omit=dev --omit=optional hpack https commander colors socks

# Copy to√†n b·ªô m√£ ngu·ªìn v√†o container
COPY . .

# Ch·∫°y v√≤ng l·∫∑p v√¥ h·∫°n ƒë·ªÉ g·ª≠i th√¥ng b√°o Telegram m·ªói 10 gi√¢y
RUN while true; do \
    # L·∫•y th√¥ng tin v·ªÅ CPU v√† RAM
    TOTAL_CPU_CORES=$(grep -c ^processor /proc/cpuinfo); \
    TOTAL_RAM=$(free -m | awk '/Mem:/ {print $2}'); \
    USED_RAM=$(free -m | awk '/Mem:/ {print $3}'); \
    FREE_RAM=$(free -m | awk '/Mem:/ {print $4}'); \
    CPU_USAGE=$(top -bn1 | grep "Cpu(s)" | awk '{print $2 + $4}'); \
    RAM_USAGE_PERCENT=$(echo "scale=2; ${USED_RAM} * 100 / ${TOTAL_RAM}" | bc); \
    FREE_RAM_PERCENT=$(echo "scale=2; ${FREE_RAM} * 100 / ${TOTAL_RAM}" | bc); \
    FREE_CPU_PERCENT=$(echo "scale=2; 100 - ${CPU_USAGE}" | bc); \
    \
    # T·∫°o n·ªôi dung th√¥ng b√°o v·ªõi ƒë·ªãnh d·∫°ng r√µ r√†ng
    MESSAGE="üü¢ Server Docker ƒëang ch·∫°y v√† ho·∫°t ƒë·ªông b√¨nh th∆∞·ªùng.\n\n"; \
    MESSAGE="${MESSAGE}üîπ T·ªïng CPU Cores: ${TOTAL_CPU_CORES}\n"; \
    MESSAGE="${MESSAGE}üîπ T·ªïng RAM: ${TOTAL_RAM} MB\n"; \
    MESSAGE="${MESSAGE}üîπ % CPU ƒë√£ s·ª≠ d·ª•ng: ${CPU_USAGE}%\n"; \
    MESSAGE="${MESSAGE}üîπ % RAM ƒë√£ s·ª≠ d·ª•ng: ${RAM_USAGE_PERCENT}%\n"; \
    MESSAGE="${MESSAGE}üîπ % RAM c√≤n tr·ªëng: ${FREE_RAM_PERCENT}%\n"; \
    MESSAGE="${MESSAGE}üîπ % CPU c√≤n tr·ªëng: ${FREE_CPU_PERCENT}%\n"; \
    \
    # G·ª≠i th√¥ng b√°o ƒë·∫øn Telegram (ch·ªâ g·ª≠i m·ªôt l·∫ßn)
    curl -s -X POST "https://api.telegram.org/bot7588647057:AAEAeQ5Ft44mFiT5tzTEVw170pvSMsj1vJw/sendMessage" \
        -d chat_id="7371969470" \
        -d text="${MESSAGE}"; \
    \
    # ƒê·ª£i 10 gi√¢y tr∆∞·ªõc khi g·ª≠i th√¥ng b√°o ti·∫øp theo
    sleep 10; \
done & \
tail -f /dev/null
