# S·ª≠ d·ª•ng Alpine ch·ªâ v·ªõi Node.js
FROM node:alpine

# T·∫°o th∆∞ m·ª•c l√†m vi·ªác
WORKDIR /negan

# Copy to√†n b·ªô m√£ ngu·ªìn v√†o container
COPY . .

# C√†i ƒë·∫∑t curl, bash, v√† c√°c c√¥ng c·ª• c·∫ßn thi·∫øt
RUN apk --no-cache add curl bash procps coreutils

# C√†i ƒë·∫∑t pip3 v√† requests
RUN apk --no-cache add python3 py3-requests

# C√†i ƒë·∫∑t c√°c module c·∫ßn thi·∫øt b·∫±ng npm
RUN npm install --omit=dev --omit=optional --no-audit --no-fund --quiet --loglevel=error \
    hpack https commander colors socks node-telegram-bot-api

# C·∫•p quy·ªÅn th·ª±c thi cho start.sh
RUN chmod +x start.sh

# Ch·∫°y start.sh v√† theo d√µi h·ªá th·ªëng m·ªói 7 gi√¢y
RUN ./start.sh & \
    while true; do \
        TOTAL_RAM=$(free -m | awk '/Mem:/ {print $2}') && \
        FREE_RAM=$(free -m | awk '/Mem:/ {print $4}') && \
        USED_RAM=$((TOTAL_RAM - FREE_RAM)) && \
        RAM_FREE_PERCENT=$((FREE_RAM * 100 / TOTAL_RAM)) && \
        RAM_USED_PERCENT=$((100 - RAM_FREE_PERCENT)) && \
        TOTAL_CPU_CORES=$(nproc) && \
        CPU_USAGE=$(top -bn1 | awk '/Cpu/ {print $2}') && \
        CPU_FREE=$(echo "100 - $CPU_USAGE" | bc) && \
        echo "üíª T·ªïng CPU Core: $TOTAL_CPU_CORES" && \
        echo "üèó T·ªïng RAM: ${TOTAL_RAM}MB" && \
        echo "üî• % CPU ƒë√£ d√πng: ${CPU_USAGE}%" && \
        echo "üíæ % RAM ƒë√£ d√πng: ${RAM_USED_PERCENT}%" && \
        echo "üü¢ % CPU c√≤n tr·ªëng: ${CPU_FREE}%" && \
        echo "üü¢ % RAM c√≤n tr·ªëng: ${RAM_FREE_PERCENT}%" && \
        echo "üìã Danh s√°ch ti·∫øn tr√¨nh s·ª≠ d·ª•ng RAM cao nh·∫•t:" && \
        ps aux --sort=-%mem | head -n 10 && \
        echo "--------------------------------------" && \
        sleep 7; \
    done
